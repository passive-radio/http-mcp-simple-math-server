name: MCP Server Integration Tests

on: [push]

jobs:
  integration-test:
    name: MCP Client-Server Integration Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Start server in Docker container
        run: |
          docker build -t mcp-server .
          docker run -d -p 3000:3000 --name mcp-test-server mcp-server
          # Wait for server to start
          sleep 5
          # Show logs for debugging
          docker logs mcp-test-server

      - name: Run basic connection test (quick fail)
        run: |
          # Simple test to fail fast if connection isn't working
          timeout 10 bash -c 'until curl -s http://localhost:3000/ > /dev/null; do sleep 1; done' || (echo "Failed to connect to server" && exit 1)
          echo "Server is responding to HTTP requests"

      - name: Run testClient.ts in non-interactive mode
        run: |
          # Create a wrapper that runs testClient.ts non-interactively
          cat > run_test.mjs << 'EOL'
          import { spawn } from 'node:child_process';

          // Simple wrapper to run testClient.ts with a timeout
          async function runTest() {
            return new Promise((resolve, reject) => {
              // Run the test client with port 3000
              console.log("Starting test client with port 3000...");
              const testProcess = spawn('npx', ['tsx', 'src/testClient.ts', '3000', '(2+3*4)/2', '7'], {
                stdio: 'inherit' // Show output in GitHub Actions logs
              });
              
              // Set timeout using standard setTimeout (not the promise version)
              const timeoutID = setTimeout(() => {
                console.error('Test timed out after 15 seconds');
                testProcess.kill();
                reject(new Error('Test timeout'));
              }, 15000);
              
              // Handle process completion
              testProcess.on('close', (code) => {
                // Clear the timeout when the process ends
                clearTimeout(timeoutID);
                
                if (code === 0) {
                  console.log('✅ Test completed successfully');
                  resolve();
                } else {
                  console.error(`❌ Test failed with exit code ${code}`);
                  reject(new Error(`Test exited with code ${code}`));
                }
              });
            });
          }

          // Run the test and handle results
          runTest()
            .then(() => process.exit(0))
            .catch(err => {
              console.error('Test runner error:', err);
              process.exit(1);
            });
          EOL

          # Run the non-interactive test wrapper
          node run_test.mjs

      - name: Clean up
        if: always()
        run: docker stop mcp-test-server || true

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            *.log
            test-results/**
